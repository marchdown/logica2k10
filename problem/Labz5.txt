Лаборат. задание 5
LL1-анализ арифметических выражений

Пусть G - КС-грамматика (возможны правила замены на пустое слово _),
и для каждого нетерминала A все правила с левой частью A (альтернативы для A)
занумерованы слева напpаво.
Для j-ой альтернативы для A (пусть она имеет вид  A->w)
    определим так называемое разделяющее множество r(A,j):
1) основной символ a входит в r(A,j), если 
   i) существует левосторонний вывод из аксиомы
   строки вида uAv, где u состоит из основных символов, и
   ii) cуществует левосторонний  вывод из wv строки, начинающейся с a;
2) # входит в r(A,j), если 
   i) и
   ii`) из wv можно вывести пустую строку.

G называется LL(1)-грамматикой, если разделяющие множжества для правил
с одинаковой левой частью не пересекаются.

Алгоритм анализа для LL(1)-гpамматики G определяется так:
Стек для удобства считаем направленным справа налево.
Вначале стек =E#,где E- начальный символ гpамматики G,
 и обpаботка начинается с s[1].
Пусть s[i] -очередной символ s, m[1] - первый символ стека.
В случае, когда m[1] - нетерминал A, если s[i] входит в r(A,j), то
A нужно заменить на w.
Если m[1]=s[i], то m[1] нужно стереть, и пеpеходим к s[i+1].
Если удастся прочитать всю входную строку s# и после этого стек
станет #, то s правильна, в противном случае неправильна.

Рассматриваем следующую LL(1)-грамматику для арифметических выражений
    ("_" означает пустую строку):
{E->Te
 e->+Te|_
 T->Ft
 t->*Ft|_
 F->(E)|a}
Разделяющие множества (rxy означает разделяющее множество для y-ой
  альтериативы правил с левой частью x; например, re2 = r(e,2)
{rE1:='a(';
re1:='+';
re2:=')#';
rT1:='a(';
rt1:='*';
rt2:='+)#';
rF1:='(';
rF2:='a';}
